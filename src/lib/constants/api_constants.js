import {
  PREFIX_MSM,
  PREFIX_MCM,
  PREFIX_MRM,
  PREFIX_MSRQ,
  PREFIX_UAM,
  PREFIX_MSRT,
} from "./index"

export const END_POINT = Object.freeze({
  v1: {
    get: {
      customerList: "/mrm/api/v2/customer/get-all",
      customerContactList: "/mrm/api/v2/contact-person/get-all",
      customerAccountList: "/mrm/customer-account/list",
      jobTypeList: "/mrm/api/v2/job-type/get-all",
      commodityTypeList: "/mrm/api/v2/commodity-type/list",
      locationList: "/mrm/api/v2/location/get-all",
      vesselList: "/mrm/ship/list",
      commodityList: "/mrm/api/v2/commodity/get-all",
      supplierList: "/mcm/api/v2/supplier/get-all",
      vesselLookUpList: "/mrm/api/v2/ship/get-all",
      locationLookUpList: "/mrm/api/v2/location/get-all",
      vesselTypeLookUpList: "/mrm/api/v2/vessel-type/get-all",
      tugType: "/mrm/api/v2/vessel-type/list",
      customerContact: "/mrm/customer-contact/detail",
      tags: "/mrm/api/v2/tag/list",
      port: "/mrm/api/v2/port/get-all",
      pilot: "/mrm/api/v2/pilot/get-all",
      searchContact: "/mrm/customer-contact/search",
      boatLookUpList: "/mrm/api/v2/work-boat/get-all",
      travelTable: "/mrm/api/v2/travel-table/list",
    },
    post: {},
    delete: {},
    put: {},
  },
  v2: {
    get: {
      // customer: '/customer',
      pilotReturnOrderList: PREFIX_MSRT + "/pilot-deployments/getAll",
      orderReturnLaunchList: PREFIX_MSRT + "/launch-deployments/getAll",
      order: "/order/",
      country: PREFIX_MRM + "/country/list",
      job: PREFIX_MRM + "/job-type/list",
      activityType: PREFIX_MRM + "/activity-type/list",
      commodity: PREFIX_MRM + "/commodity/list",
      commodityType: PREFIX_MRM + "/commodity-type/list",
      tag: PREFIX_MRM + "/tag/list",
      predefinedOption: PREFIX_MRM + "/predefined-option/list",
      predefinedOptionAll: PREFIX_MRM + "/predefined-option/get-all",
      portServiceType: PREFIX_MRM + "/port-service/list",
      portServiceTypeUnion: PREFIX_MRM + "/port-service/union/list",
      portServiceAll: PREFIX_MRM + "/port-service/get-all",
      pilotagePortServiceAll: PREFIX_MRM + "/pilotage-port-service/get-all",
      cranagePortServiceAll: PREFIX_MRM + "/cranage-port-service/get-all",
      towagePortServiceAll: PREFIX_MRM + "/towage-port-service/get-all",
      barge: PREFIX_MRM + "/barge/list",
      customer: PREFIX_MCM + "/customer/list",
      account: PREFIX_MCM + "/account/list",
      contactPerson: PREFIX_MCM + "/contact-person/list",
      supplier: PREFIX_MCM + "/supplier/list",
      location: PREFIX_MRM + "/location/list",
      sector: PREFIX_MRM + "/sector/list",
      channel: PREFIX_MRM + "/channel/list",
      port: PREFIX_MRM + "/port/list",
      organization: PREFIX_UAM + "/organization/list",
      permissionGroup: PREFIX_UAM + "/permission-group/list",
      pilot: PREFIX_MRM + "/pilot/list",
      crew: PREFIX_MRM + "/crew/list",
      terrestrial: PREFIX_MRM + "/car/list",
      pilotApplication: PREFIX_MRM + "/pilot-application/list",
      pilotCertificate: PREFIX_MRM + "/pilot-certificate/list",
      pilotClass: PREFIX_MRM + "/pilot-class/list",
      pilotExemption: PREFIX_MRM + "/pilot-exemption-certificate/list",
      workboat: PREFIX_MRM + "/work-boat/list",
      tug: PREFIX_MRM + "/tug/list",
      vessel: PREFIX_MRM + "/ship/list",
      vesselType: PREFIX_MRM + "/vessel-type/list",
      vesselVisit: PREFIX_MSM + "/vessel-visit/list",
      fsu: PREFIX_MRM + "/fsu/list",
      container: PREFIX_MRM + "/container/list",
      incidentCategory: PREFIX_MSM + "/incident-category/list",
      tugorderList: PREFIX_MSRQ + "/order/tug",
      pilotOrderList: PREFIX_MSRQ + "/order/pilot",
      workboatOrderList: PREFIX_MSRQ + "/order/work-boat",
      travelTable: "/mrm/api/v2/travel-table/list",
      reportCategory: "/mrs/api/v2/report/category/list",
      tidalDataList: "/mpes/api/v2/tide/list",
      reasonVisit: PREFIX_MRM + "/visit-reason/list",
      team: PREFIX_MRM + "/team/list",
      teamById: PREFIX_MRM + "/team",
    },
    post: {
      order: PREFIX_MSRQ + "/order/new",
      country: PREFIX_MRM + "/country/create",
      job: PREFIX_MRM + "/job-type/create",
      commodity: PREFIX_MRM + "/commodity/create",
      commodityType: PREFIX_MRM + "/commodity-type/create",
      customer: PREFIX_MCM + "/customer/create",
      account: PREFIX_MCM + "/account/create",
      contactPerson: PREFIX_MCM + "/contact-person/create",
      supplier: PREFIX_MCM + "/supplier/create",
      location: PREFIX_MRM + "/location/create",
      reportMenu: "/mrs/api/v2/report/menu/data",
      team: PREFIX_MRM + "/team",
    },
    delete: {
      order: PREFIX_MSRQ + "/order/delete/",
      country: PREFIX_MRM + "/country/",
      job: PREFIX_MRM + "/job-type/",
      commodity: PREFIX_MRM + "/commodity/",
      commodityType: PREFIX_MRM + "/commodity-type/",
      customer: PREFIX_MCM + "/customer/",
      account: PREFIX_MCM + "/account/",
      contactPerson: PREFIX_MCM + "/contact-person/",
      supplier: PREFIX_MCM + "/supplier/",
    },
    update: {
      order: PREFIX_MSRQ + "/order/update",
      country: PREFIX_MRM + "/country/update",
      job: PREFIX_MRM + "/job-type/update",
      commodity: PREFIX_MRM + "/commodity/update",
      commodityType: PREFIX_MRM + "/commodity-type/update",
      customer: PREFIX_MCM + "/customer/update",
      account: PREFIX_MCM + "/account/update",
      contactPerson: PREFIX_MCM + "/contact-person/update",
      supplier: PREFIX_MCM + "/supplier/update",
    },
  },
  msrt: {
    get: {
      launchDeployments: "/msrt/api/v2/launch-deployments/service-request",
    },
  },
})
